本地代码推送到远程：
    1：git init 初始化git仓库
    2:git add
    3：git commit 提交到本地仓库
    4： git remote add origin git@github.com:Running-Snail-One/myInstructions.git  添加远程仓库地址
    5：git push -u origin master(master是指远程仓库的名称)


git获取远程服务器的指定分支：
        $ git pull <远程库名> <远程分支名>:<本地分支名>
git建立分支并切换到该分支：
    git checkout -b xxx;
基于master 分支新建xxx并切换到该分支
    git checkout -b xxx master;
基于某次提交的分支id创建分支：
    git checkout -b xxx  id;
    id是commit id 的前七位

git 切换分支前要注意本地分支是否有未提交commit的文件，如果有，可以使用git stash命令将当前分支的改动临时保存起来
，使得当前分支的改动临时保存起来，使得当前分支的工作空间和暂存区变干净。然后再用git checkout branchX切换到branchX分支。
如何恢复被临时保存的改动
    1: git stash  list 查看有多少个临时保存的文件
    2: git stash apply -- index stash@{n},n为使用git stash list 查看到的某个改动的数字；
    3: git stash drop stash@{n}删除临时保存的改动

查看分支：
    git branch:
    git branch -v :显示本地分支和commit id
    git branch -vv:显示本地分支名;commit id;追踪关系
    git branch -r:查看远程分支名
删除本地分支:
    git branch -d xxx;普通删除
    git branch -D xxx;强制删除

建立追踪关系:
    建立新分支时并与远程某一分支做关联：
        git checkout -b xxx origin/远程分支名;
    已有分支时:
        git branch --set-upstream-to = origin/远程分支名  本地分支名
        或者
        git branch -u origin/远程分支名 本地分支名
